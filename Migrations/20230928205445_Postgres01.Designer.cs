// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Multas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230928205445_Postgres01")]
    partial class Postgres01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Multas.Models.Coactivos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("cedula")
                        .HasColumnType("text");

                    b.Property<string>("comparendo")
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha_comp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_mdto")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_proceso")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_sancion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("infraccion")
                        .HasColumnType("text");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("coactivos");
                });

            modelBuilder.Entity("Multas.Models.Comparendos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("abono")
                        .HasColumnType("double precision");

                    b.Property<bool>("accidente")
                        .HasColumnType("boolean");

                    b.Property<string>("agente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("categoria")
                        .HasColumnType("integer");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cedula_prop")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("clase_veh")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_tran")
                        .HasColumnType("integer");

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("descuento")
                        .HasColumnType("double precision");

                    b.Property<string>("divipo_placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("entidad")
                        .HasColumnType("integer");

                    b.Property<string>("equipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fec_Sancion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_notif")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("fotomulta")
                        .HasColumnType("boolean");

                    b.Property<bool>("fuga")
                        .HasColumnType("boolean");

                    b.Property<int>("grado_alcol")
                        .HasColumnType("integer");

                    b.Property<string>("grua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gsangre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("hora")
                        .HasColumnType("interval");

                    b.Property<string>("id_testigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("importado")
                        .HasColumnType("boolean");

                    b.Property<bool>("incumplio")
                        .HasColumnType("boolean");

                    b.Property<string>("infraccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("inmovil")
                        .HasColumnType("boolean");

                    b.Property<string>("lic_con")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lic_tran")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lugar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("modal_tran")
                        .HasColumnType("integer");

                    b.Property<int>("mun")
                        .HasColumnType("integer");

                    b.Property<string>("obs")
                        .HasColumnType("text");

                    b.Property<int>("patio")
                        .HasColumnType("integer");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("placa_grua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("prueba")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("radio_accion")
                        .HasColumnType("integer");

                    b.Property<string>("resol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("sancionado")
                        .HasColumnType("boolean");

                    b.Property<string>("targ_oper")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tipo_id")
                        .HasColumnType("integer");

                    b.Property<int>("tipo_id_prop")
                        .HasColumnType("integer");

                    b.Property<int>("tipo_infractor")
                        .HasColumnType("integer");

                    b.Property<int>("tipo_servicio")
                        .HasColumnType("integer");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.Property<int>("vel_medida")
                        .HasColumnType("integer");

                    b.Property<int>("vel_per")
                        .HasColumnType("integer");

                    b.Property<double>("vlr_acuerdo")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("Comparendos");
                });

            modelBuilder.Entity("Multas.Models.Infracciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("activa")
                        .HasColumnType("boolean");

                    b.Property<bool>("alcohol")
                        .HasColumnType("boolean");

                    b.Property<bool>("alerta")
                        .HasColumnType("boolean");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("descuento")
                        .HasColumnType("boolean");

                    b.Property<string>("equipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("grupo")
                        .HasColumnType("integer");

                    b.Property<string>("homologar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("inmovil")
                        .HasColumnType("boolean");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("reincidencias")
                        .HasColumnType("integer");

                    b.Property<bool>("simit")
                        .HasColumnType("boolean");

                    b.Property<string>("simitCod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("supervisor")
                        .HasColumnType("boolean");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("infracciones");
                });

            modelBuilder.Entity("Multas.Models.Infractores", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("ciudad_lic")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("licencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("tipo_ident")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("infractores");
                });

            modelBuilder.Entity("Multas.Models.Intereses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("indesde")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("inhasta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("mes")
                        .HasColumnType("integer");

                    b.Property<float>("porc")
                        .HasColumnType("real");

                    b.Property<int>("vigencia")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("intereses");
                });

            modelBuilder.Entity("Multas.Models.Liquidaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<TimeSpan>("Phora")
                        .HasColumnType("interval");

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("pabono")
                        .HasColumnType("double precision");

                    b.Property<double>("pdescuento")
                        .HasColumnType("double precision");

                    b.Property<string>("pdoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pestado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("pfecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pinfraccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("pinteres_mora")
                        .HasColumnType("double precision");

                    b.Property<string>("pninfraccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pnombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("porc_ac")
                        .HasColumnType("double precision");

                    b.Property<string>("pplaca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("presol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("psancionado")
                        .HasColumnType("boolean");

                    b.Property<double>("ptotal")
                        .HasColumnType("double precision");

                    b.Property<double>("pvalor")
                        .HasColumnType("double precision");

                    b.Property<double>("pvlr_adicional")
                        .HasColumnType("double precision");

                    b.Property<double>("pvlr_recibo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("tipo_in")
                        .HasColumnType("integer");

                    b.Property<double>("vlr_inicial")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("liquidaciones");
                });

            modelBuilder.Entity("Multas.Models.Parametros", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("bloquea_hora")
                        .HasColumnType("boolean");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("coactivo_man")
                        .HasColumnType("boolean");

                    b.Property<bool>("cobra_adicional")
                        .HasColumnType("boolean");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("costas")
                        .HasColumnType("boolean");

                    b.Property<int>("cuotas_finan")
                        .HasColumnType("integer");

                    b.Property<int>("dh_fecha1")
                        .HasColumnType("integer");

                    b.Property<int>("dh_fecha2")
                        .HasColumnType("integer");

                    b.Property<int>("dh_fecha3")
                        .HasColumnType("integer");

                    b.Property<int>("dh_fecha4")
                        .HasColumnType("integer");

                    b.Property<int>("dh_fecha5")
                        .HasColumnType("integer");

                    b.Property<int>("dh_fecha6")
                        .HasColumnType("integer");

                    b.Property<int>("dias_coactivo")
                        .HasColumnType("integer");

                    b.Property<int>("dias_mdto")
                        .HasColumnType("integer");

                    b.Property<int>("dias_persuasivo")
                        .HasColumnType("integer");

                    b.Property<string>("dir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("divipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fec_ini_interes")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_Nueva_ley")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fin_nueva_ley")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("incumplio")
                        .HasColumnType("boolean");

                    b.Property<int>("min_inactivo")
                        .HasColumnType("integer");

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("porc_min_fin")
                        .HasColumnType("double precision");

                    b.Property<bool>("susp_lic")
                        .HasColumnType("boolean");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tipo_acuerdo")
                        .HasColumnType("integer");

                    b.Property<int>("tipo_inicial")
                        .HasColumnType("integer");

                    b.Property<double>("vlr_recibo")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("parametros");
                });

            modelBuilder.Entity("Multas.Models.Persuasivos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dpto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecven")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("infraccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("persuasivos");
                });

            modelBuilder.Entity("Multas.Models.Procesos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("estado")
                        .HasColumnType("integer");

                    b.Property<string>("expediente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha_mdto")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_proc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("nestado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("resolucion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("procesos");
                });

            modelBuilder.Entity("Multas.Models.Recibos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("acuota")
                        .HasColumnType("integer");

                    b.Property<int>("banco")
                        .HasColumnType("integer");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cheque")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("decuota")
                        .HasColumnType("integer");

                    b.Property<double>("descuento")
                        .HasColumnType("double precision");

                    b.Property<string>("equipo_pago")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_aplica")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_proceso")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecpago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("fpago")
                        .HasColumnType("integer");

                    b.Property<double>("interes_mora")
                        .HasColumnType("double precision");

                    b.Property<int>("nfinancia")
                        .HasColumnType("integer");

                    b.Property<char>("tipo")
                        .HasColumnType("character(1)");

                    b.Property<int>("tipo_id")
                        .HasColumnType("integer");

                    b.Property<double>("titulo_valor")
                        .HasColumnType("double precision");

                    b.Property<int>("user_liq")
                        .HasColumnType("integer");

                    b.Property<int>("usuario")
                        .HasColumnType("integer");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.Property<double>("vlr_adicional")
                        .HasColumnType("double precision");

                    b.Property<double>("vlrrecibo")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("recibos");
                });

            modelBuilder.Entity("Multas.Models.Resoluciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ntipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("resol_ant")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("resolucion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tipo")
                        .HasColumnType("integer");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("resoluciones");
                });

            modelBuilder.Entity("Multas.Models.Sanciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("comparendo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_san")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("valor")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("sanciones");
                });

            modelBuilder.Entity("Multas.Models.Tarifas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("equipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("salario")
                        .HasColumnType("real");

                    b.Property<int>("usuario")
                        .HasColumnType("integer");

                    b.Property<int>("vigencia")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("tarifas");
                });

            modelBuilder.Entity("Multas.Models.Tipos_nov", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("codigo_simit")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("resol_ant")
                        .HasColumnType("boolean");

                    b.Property<bool>("resol_igual")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.ToTable("tipos_nov");
                });

            modelBuilder.Entity("Multas.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("banco")
                        .HasColumnType("integer");

                    b.Property<bool>("cajero")
                        .HasColumnType("boolean");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("habilitado")
                        .HasColumnType("boolean");

                    b.Property<bool>("inspector")
                        .HasColumnType("boolean");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("nivel")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("usuario_creo")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
