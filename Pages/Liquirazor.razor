@page "/liquidacionprueba"

@using Multas.Models;
@using Multas.Shared.Services.SLiquidacion;
@inject ILiquidacionService LiquidacionService




<h3>liquirazor</h3>

 <div class="card-body table-responsive p-0">

    <table class="table">
        <thead>
            <tr>
                <th>Recibo</th>
                <th>Codigo</th>
                <th>Nombre</th>
                <th>Valor</th>
                <th>Descuento</th>
                @*<td align="center"> <b>Acciones </b></td>*@
            </tr>
        </thead>
        <tbody>
            @if (reciboslist != null && reciboslist.Any())
            {
                @foreach (var reciboslist1 in reciboslist)
                {
                    <tr>
                        <td>@reciboslist1.id</td>
                        <td>@reciboslist1.fecha</td>
                        <td>@reciboslist1.fecpago</td>
                        <td>@reciboslist1.interes_mora</td>
                        <td>@reciboslist1.valor</td>
                        <td align="center">
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">Está vacía la lista de recibos o ha ocurrido un error al obtenerlos.</td>
                </tr>
            }
        </tbody>
    </table>
</div>




@code {

    public Liquidaciones liquidacion { get; set; }

    public List<Resoluciones> resolucioneslist { get; set; }

    public List<Recibos> reciboslist { get; set; }

    public List<Procesos> procesoslist { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reciboslist = (await LiquidacionService.GetRecibos()).ToList();
    }

}
